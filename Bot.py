import telebot

import Parser
import psycopg2
import os
from datetime import datetime, timedelta

from telebot import types

token = os.environ['TOKEN']
bot = telebot.TeleBot(token)


host = os.environ['HOST']
user = os.environ['USER']
password = os.environ['PASSWORD']
db_name = os.environ['DB_NAME']

connection = psycopg2.connect(host=host, user=user, password=password, database=db_name)
connection.autocommit = True

cursor = connection.cursor()



subject = "-"

def rand():
	date_txt = datetime.today().strftime("%y.%m.%d.%H%M%S")
	splitted = date_txt.split(".")
	ran = int(splitted[0] + splitted[1] + splitted[2] + splitted[3])
	return ran



@bot.message_handler(commands=['start'])
def say_hi(message):
	bot.send_message(message.from_user.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –í–∞—à–∏—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—É \"–ü–æ–º–æ—â—å\" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /help")
	bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞\n–ü—Ä–∏–º–µ—Ä: 8–∞\n–ï—Å–ª–∏ —É –≤–∞—Å –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–π –∫–ª–∞—Å—Å, —Å–ª–µ–¥—É–µ—Ç –ø–∏—Å–∞—Ç—å —Å —É—á—ë—Ç–æ–º –ø—Ä–æ—Ñ–∏–ª—è\n–ü—Ä–∏–º–µ—Ä: 11–º")
	bot.register_next_step_handler(message, new_user)

def new_user(message):
	try:
		course_name = message.text
		cursor.execute(f"SELECT * FROM tg_user WHERE user_id = {message.from_user.id};")
		list = cursor.fetchall()
		if list == []:
			cursor.execute("INSERT INTO tg_user VALUES (%s, %s, %s);", (message.from_user.id, 'NULL', course_name))
		else:
			cursor.execute(f"UPDATE tg_user SET course_name = '{course_name}' WHERE user_id = {message.from_user.id}")
		bot.send_message(message.from_user.id, "–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞")
		bot.register_next_step_handler(message, new_user)
		#print(f"INFO: {error} in function {message.text}")

@bot.message_handler(commands=['help'])
def help(message):
	bot.send_message(message.from_user.id,
"""‚Ä¢–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å/–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å/—Å—Ç–µ—Ä–µ—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –ø—Ä–µ–¥–º–µ—Ç -> –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n
‚Ä¢–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –ø—É–Ω–∫—Ç \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–∑\" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /watch_all\n
‚Ä¢–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –ø—É–Ω–∫—Ç \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /tomorrow_hw\n
‚Ä¢–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –ø—É–Ω–∫—Ç \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /tomorrow_schedule\n
‚Ä¢–ß—Ç–æ–±—ã —Å—Ç–µ—Ä–µ—Ç—å –≤—Å–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é –ø—É–Ω–∫—Ç \"–°—Ç–µ—Ä–µ—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏\" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É /delete_all 
""")

@bot.message_handler(commands=['mathematics', 'physics', 'biology', 'chemistry', 'it', 'geography', 'russian', 'literature', 'history', 'english', 'law', 'social_sciense', 'economics', 'psychology', 'lsf'])
def subject(message):

	global subject
	subject = message.text
	subject = str(subject)[1:]

	keyboard = types.InlineKeyboardMarkup()
	watch = types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑", callback_data="watch")
	keyboard.add(watch)
	write = types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å –¥–∑", callback_data="write")
	keyboard.add(write)
	delete = types.InlineKeyboardButton(text="–°—Ç–µ—Ä–µ—Ç—å –∑–∞–ø–∏—Å—å", callback_data="delete")
	keyboard.add(delete)

	bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def buttons(call):
	global subject

	if call.data == "write":
		bot.send_message(call.message.chat.id, "–ó–∞–ø–∏—à–∏—Ç–µ –¥–∑, —É–∫–∞–∑–∞–≤ –¥–∞—Ç—É:")
		bot.register_next_step_handler(call.message, write_subject)
	elif call.data == "watch":
		bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑:")
		bot.register_next_step_handler(call.message, watch_subject)
	elif call.data == "delete":
		bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—ã–ª–æ –∑–∞–ø–∏—Å–∞–Ω–æ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É:")
		bot.register_next_step_handler(call.message, delete_subject)

def watch_subject(message):

	try:
		date = datetime.strptime(message.text, "%d.%m.%y").date()
		cursor.execute(f"SELECT homework_id FROM tg_homework WHERE user_Id = %s", [message.from_user.id])
		all_hw_id_list = cursor.fetchall()

		hw_text = []
		for hw_id_1 in all_hw_id_list:
			for hw_id in hw_id_1:
				cursor.execute(f"""SELECT hw_text FROM homework WHERE homework_id = %s AND lesson_name = %s AND hw_date = %s""", [hw_id, subject, date])
				hw_text.append(cursor.fetchall())

		while [] in hw_text:
			hw_text.remove([])

		if hw_text == []:
			bot.send_message(message.from_user.id, "–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ")
		else:
			bot.send_message(message.from_user.id, f"–î–∑ –Ω–∞ {date}:")
			for text in hw_text:
				bot.send_message(message.from_user.id, text[0])
	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–í—ã –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏: 01.01.22\n–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç–∞—Ä–æ–π –ø–∞–Ω–µ–ª–∏. –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã, –≤—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑")
		print(f"INFO: {error} in function watch_subject")


def write_subject(message):

	homework_id = rand()
	try:
		splitted = message.text.split(" ", 1)
		date_txt, text = splitted[0], splitted[1]
		date = datetime.strptime(date_txt, "%d.%m.%y").date()

		cursor.execute("SELECT homework_id FROM homework WHERE lesson_name = %s AND hw_date = %s", [subject, date])
		curs = cursor.fetchall()
		if curs != []:
			hw_id = curs[0][0]
			cursor.execute("SELECT hw_text FROM homework WHERE lesson_name = %s AND hw_date = %s", [subject, date])
			hw_txt = cursor.fetchall()[0][0]

			text = hw_txt + ", " + text
			cursor.execute("DELETE FROM homework WHERE lesson_name = %s AND hw_date = %s", [subject, date])
			cursor.execute("DELETE FROM tg_homework WHERE homework_id = %s", [hw_id])

		cursor.execute("INSERT INTO homework VALUES (%s, %s, %s, %s);", [homework_id, subject, date, text])

		cursor.execute("INSERT INTO tg_homework VALUES (%s, %s);", [message.from_user.id, homework_id])
		bot.send_message(message.from_user.id, "–î–∑ –∑–∞–ø–∏—Å–∞–Ω–æ")

	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–í—ã –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏: 01.01.22 ‚Ññ1,2,3")
		print(f"INFO: {error} in function write_subject")

def delete_subject(message):
	try:
		date = datetime.strptime(message.text, "%d.%m.%y").date()
		cursor.execute("SELECT homework_id FROM homework WHERE lesson_name = %s AND hw_date = %s;", [subject, date])
		homework_id = cursor.fetchall()
		cursor.execute("DELETE FROM homework WHERE lesson_name = %s AND hw_date = %s;", [subject, date])
		for hw_id in homework_id:
			cursor.execute("DELETE FROM tg_homework WHERE homework_id = %s;", [hw_id])
		bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")

	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–í—ã –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n–ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏: 01.01.22 ‚Ññ1,2,3\n–í–æ–∑–º–æ–∂–Ω–æ, –Ω–∞ –¥–∞–Ω–Ω—É—é –¥–∞—Ç—É –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–æ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ")
		print(f"INFO: {error} in function delete_subject")

@bot.message_handler(commands=['watch_all'])
def show_all(message):
	names = {'mathematics': "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", 'physics': "–§–∏–∑–∏–∫–∞", 'biology': "–ë–∏–æ–ª–æ–≥–∏—è", 'chemistry': "–•–∏–º–∏—è",
			 'it': "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", 'geography': "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", 'russian': "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", 'literature': "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
			 'history': "–ò—Å—Ç–æ—Ä–∏—è", 'english': "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫", 'law': "–ü—Ä–∞–≤–æ", 'social_sciense': "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ",
			 'economics': "–≠–∫–æ–Ω–æ–º–∏–∫–∞", 'psychology': "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", 'lsf': "–û–ë–ñ"}
	dates = []
	start = 1
	today = datetime.today().date().weekday()
	if today == 6:
		for_range = 7
	elif today == 5:
		for_range, start = 8, 2
	elif today == 4:
		for_range, start = 9, 3
	else:
		for_range = 6 - today

	for plus in range(start, for_range):
		dates.append(datetime.today().date() + timedelta(days=plus))

	try:
		send = ""
		for date in dates:
			cursor.execute("SELECT homework_id FROM tg_homework WHERE user_Id = %s;", [message.from_user.id])
			with_tuples = cursor.fetchall()
			ids = tuple(tup_date[0] for tup_date in with_tuples)
			if ids != ():
				cursor.execute("SELECT lesson_name, hw_text FROM homework WHERE hw_date = %s AND homework_id IN %s;", [date, ids])
				homeworks = cursor.fetchall()
			else:
				homeworks = []
			send += f"–î–∑ –Ω–∞ {date}:\n"
			for lesson_hw in homeworks:
				send += f"\t\t\t‚Ä¢{names[lesson_hw[0]]}: {lesson_hw[1]}\n"
			if homeworks == []:
				send += "\t\t\t–ù–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ\n"
			send += "\n"
		bot.send_message(message.from_user.id, send)

	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ 	üòï")
		print(f"INFO: {error} in function {message.text}")

@bot.message_handler(commands=['delete_all'])
def del_all(message):
	try:
		cursor.execute("SELECT homework_id FROM tg_homework WHERE user_Id = %s;", [message.from_user.id])
		homework_ids = cursor.fetchall()
		for homework_id in homework_ids:
			cursor.execute("DELETE FROM homework WHERE homework_id = %s;", [homework_id])
		cursor.execute("DELETE FROM tg_homework WHERE user_Id = %s;", [message.from_user.id])
		bot.send_message(message.from_user.id, "–í—Å–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã")
	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ 	üòï")
		print(f"INFO: {error} in function {message.text}")

@bot.message_handler(commands=['tomorrow_hw'])
def watch_tomorrow_hw(message):
	try:
		names = {'mathematics': "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", 'physics': "–§–∏–∑–∏–∫–∞", 'biology': "–ë–∏–æ–ª–æ–≥–∏—è", 'chemistry': "–•–∏–º–∏—è",
				 'it': "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", 'geography': "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", 'russian': "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", 'literature': "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
				 'history': "–ò—Å—Ç–æ—Ä–∏—è", 'english': "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫", 'law': "–ü—Ä–∞–≤–æ", 'social_sciense': "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ",
				 'economics': "–≠–∫–æ–Ω–æ–º–∏–∫–∞", 'psychology': "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", 'lsf': "–û–ë–ñ"}

		date = datetime.today().date() + timedelta(days=1)
		if date.day == 6:
			date = date + timedelta(days=1)
		elif date.day == 5:
			date = date + timedelta(days=2)

		cursor.execute("SELECT homework_id FROM tg_homework WHERE user_Id = %s;", [message.from_user.id])
		bad_homework_ids = cursor.fetchall()
		homework_ids = tuple(hw_id[0] for hw_id in bad_homework_ids)

		if homework_ids == ():
			bot.send_message(message.from_user.id, f"–ù–∞ {date} –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ")
		else:
			cursor.execute("SELECT (lesson_name, hw_text) FROM homework WHERE homework_id IN %s AND hw_date = %s;", [homework_ids, date])
			bad_tomorrow_homework = cursor.fetchall()
			tomorrow_homework = tuple(hw[0] for hw in bad_tomorrow_homework)

			send = f"–î–∑ –Ω–∞ {date}:\n\n"
			for homework in tomorrow_homework:
				homework = homework[1:-1]
				lesson = homework.split(',', 1)[0]
				text = homework.split(',', 1)[1]

				send += f"{names[lesson]}: {text}\n"
			if send == f"–î–∑ –Ω–∞ {date}:\n\n":
				send = "–ù–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ"
			bot.send_message(message.from_user.id, send)

	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ 	üòï")
		print(f"INFO: {error} in function {message.text}")

@bot.message_handler(commands=['tomorrow_schedule'])
def watch_tomorrow_schedule(message):
	try:
		tom_date = datetime.today() + timedelta(days=1)
		if tom_date.weekday() == 6:
			tom_date = tom_date + timedelta(days=1)
		elif tom_date.weekday() == 5:
			tom_date = tom_date + timedelta(days=2)

		schedule = Parser.get_schedule(tom_date)
		tom_date = tom_date.date()
		if schedule != "Schedule not posted for the selected date" and schedule != "No lessons on weekends":
			cursor.execute("SELECT course_name FROM tg_user WHERE user_id = %s;", [message.from_user.id])
			course = cursor.fetchall()
			tom_sched = schedule[str(course[0][0])]

			bot.send_message(message.from_user.id, f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {tom_date}")
			k, for_send = 1, ""
			while "" in tom_sched:
				tom_sched.remove("")
			for lesson in tom_sched:
				for_send += f"{k}. {lesson}" + "\n"
				k += 1
			bot.send_message(message.from_user.id, for_send)
		else:
			bot.send_message(message.from_user.id, "–ù–∞ –∑–∞–≤—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –≤—ã–ª–æ–∂–µ–Ω–æ")
	except(Exception, psycopg2.Error) as error:
		bot.send_message(message.from_user.id, "–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ 	üòï \n–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏ —É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞")
		print(f"INFO: {error} IN FUNCTION {message.text}")


@bot.message_handler(func = lambda message: True)
def sender(message):
	mes = message.text.split('\n')
	send = ""
	if mes[0] == "–õ–µ—Ä–µ":
		id = 478903479
		send = mes[1]
	elif mes[0] == "–î–∏–º–∞—Å—É":
		id = 799395562
		send = mes[1]
	elif mes[0] == "–ú–∞—Ç–≤–µ—é":
		id = 867731219
		send = mes[1]
	elif message.from_user.id != 813519084:
		id = 813519084
		send = str(message.from_user.id) + ": " + message.text
		bot.send_message(message.from_user.id, "–ë–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏")
	else:
		return 0

	bot.send_message(id, send)

"""
id-—à–Ω–∏–∫–∏:
	799395562 - –î–∏–º–∞—Å
	478903479 - –õ–µ—Ä—á–∏–∫
	867731219 - –ú–∞—Ç–≤–µ–π
	813519084 - –Ø
"""

bot.polling(none_stop=True)
